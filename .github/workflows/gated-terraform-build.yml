name: Gated Build when PR is raised

on:
  workflow_call:
    inputs:
      ARM_CLIENT_ID:
        required: true
        type: string
      ARM_CLIENT_SECRET:
        required: true
        type: string
      ARM_SUBSCRIPTION_ID:
        required: true
        type: string
      ARM_TENANT_ID:
        required: true
        type: string

env:
  WORKING_DIRECTORY: "./Infrastructure/AKS"

jobs:
  gated-terraform-build:
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.WORKING_DIRECTORY }}

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: terraform fmt -check
        continue-on-error: true
        working-directory: ${{ env.WORKING_DIRECTORY }}

      # Validates the Terraform Files
      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ env.WORKING_DIRECTORY }}
